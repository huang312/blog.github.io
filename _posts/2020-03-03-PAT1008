1008 数组元素循环右移问题
题目：一个数组A中存有N（>0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，即将A中的数据由（A0A1...AN-1）
变换为（AN-M...AN-1A0A1...AN-M-1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？
输入格式:
每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；第2行输入N个整数，之间用空格分隔。
输出格式:
在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。
输入样例:
6 2
1 2 3 4 5 6
输出样例:
5 6 1 2 3 4

分析：
1.将数组1中第M个元素之后的元素拷贝到数组2中，然后将剩下的元素移到数组1的最后，再将数组2中的元素放到数组1的开头。
但在这里不能使用另外数组，所以不考虑这种方法
2.每次将数组整体右移一位，一共移动M次。缺点是移动次数较多，一共移动N*M次。
#include<stdio.h>  
int main(){  
    int m,n,i,j,t;  
    scanf("%d%d",&n,&m);  
    int a[n+1];  
    for(i=0;i<n;i++)  
    scanf("%d",&a[i]);  
    for(i=0;i<m;i++)  
    {  
        for(j=n-1;j>=0;j--)  
        a[j+1]=a[j];  
        a[0]=a[n];  
    }  
    for(i=0;i<n;i++)  
    {  
        printf("%d",a[i]);  
        if(i<n-1)  
        printf(" ");  
    }  
    return 0;  
}
3.输出时按移动后的顺序输出
#include<stdio.h>
int main(){
	int m,n,i;
    scanf("%d%d",&n,&m);
	int a[n];
	for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    m=m%n;
	for(i=0;i<n;i++)
	{
		printf("%d",a[(n+i-m)%n]);//改变输出的顺序
		if(i<n-1)
		printf(" ");
	}
	return 0;
} 
4.求出M和N的最大公约数gcd，则数组可以分成N/gcd组，每一组内相邻的元素相差M%N位，所以只需要将每组内的元素向右移动一位即可，则一共移动N次
int main()
{
	int N, M, x, y, a, b, c, TS1, TS2,gcd;
	int num[100] = { 0 };

	scanf("%d%d", &N, &M);
	a = N;
	b = M;
	for (int i = 0; i < N; i++)
	{
		scanf("%d", &num[i]);
	}

	x = M%N;
	while (b!=0) 
	{
		c = a%b;
		a = b;
		b = c;
		gcd = a;
	}
	printf("%d\n", gcd);
	for (int i = 0; i < gcd; i++)
	{
		TS1 = num[i];
		for (int j = 0; j < (N / gcd); j++)
		{
			a = (i+j*x) % N;
			b = (a + x) % N;
			TS2 = num[b];
			num[b] = TS1;
			TS1 = TS2;
		}
	}
	for (int i = 0; i < N; i++)
	{
		printf("%d", num[i]);
    		if(i<n)
    printf(" ");
	}

	return 0;
}
